apiVersion: v1
kind: Service
metadata:
  name: app-service
spec:
  type: LoadBalancer
  selector:
    app: sample-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  labels:
    app: sample-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sample-app
  template:
    metadata:
      labels:
        app: sample-app
    spec:
      serviceAccountName: app-serivce-account
      containers:
      - name: sample-app-container
        image: europe-west1-docker.pkg.dev/cloud-x-432119/final-task/final-task:latest
        imagePullPolicy: Always
        env:
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: gke-cloud-sql-secrets
              key: username
        - name: PASSWORD
          valueFrom:
            secretKeyRef:
              name: gke-cloud-sql-secrets
              key: password
      - name: cloud-sql-proxy
        image: gcr.io/cloud-sql-connectors/cloud-sql-proxy:2.11.4
        args:
          # If connecting from a VPC-native GKE cluster, you can use the
          # following flag to have the proxy connect over private IP
          - "--private-ip"
          - "--structured-logs"
          - "--port=5432"
          - "cloud-x-432119:europe-west1:test-db"
        resources:
          requests:
            memory: "2Gi"
            cpu:    "1"
      initContainers:
          - name: liquibase
            image: liquibase/liquibase:latest
            command: ["liquibase", "update", "--changeLogFile=/liquibase/changelog/changelog.xml"]
            env:
            - name: LIQUIBASE_URL
              value: "jdbc:postgresql://127.0.0.1:5432/postgres"
            - name: LIQUIBASE_USERNAME
              value: "myuser"
            - name: LIQUIBASE_PASSWORD
              value: "mypassword"
